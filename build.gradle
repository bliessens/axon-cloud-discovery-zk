buildscript {
    ext {
        springBootVersion = '1.5.18.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:1.2"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
    }
}


apply plugin: 'docker'

ext {
    axon = '3.4.2'
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    ext {
        springCloudVersion = 'Edgware.SR4'
//    springCloudNetlixVersion = '1.3.6.RELEASE'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//        mavenBom "org.springframework.cloud:spring-cloud-netflix:${springCloudNetlixVersion}"
        }
    }

    dependencies {
        testImplementation 'junit:junit:4.12'
    }


    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    check.dependsOn jacocoTestReport

    idea {
        module {
            downloadSources = true
            downloadJavadoc = true

            outputDir = file("$rootDir/out/production/$name")
            testOutputDir = file("$rootDir/out/test/$name")

            excludeDirs += [file('.gradle'), file('.idea'), file('build'), file('gradle')]

        }
    }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    if (discovery == 'zookeeper') {
        implementation project(':cloud:zookeeper')
    } else if (discovery == 'eureka') {
        implementation project(':cloud:eureka')
    }

    //axon
    implementation "org.axonframework:axon-spring-boot-starter:$axon"

    testImplementation "org.axonframework:axon-test:$axon"

    runtimeOnly 'org.hsqldb:hsqldb:2.3.6'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

task ideaDockerPrepare(dependsOn: assemble) {
    doFirst {
        copy {
            from jar
            rename { fileName -> fileName.replace(jar.archiveName, 'axon-cloud-discovery.jar') }
            into 'build/libs'
        }
    }
}

task buildDocker(type: Docker, dependsOn: assemble) {
    applicationName = jar.baseName
    dockerfile = file('src/Dockerfile')
    doFirst {
        copy {
            from jar
            rename { fileName -> fileName.replace(jar.archiveName, 'axon-cloud-discovery.jar') }
            into stageDir
        }
    }
}

task publish(dependsOn: build) {

}

task sonarqube() {

}