buildscript {
    ext {
        springBootVersion = '1.5.15.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:1.2"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

group = 'be.cheops.cloud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


ext {
    springCloudVersion = 'Edgware.SR4'
    axon = '3.1.3'
}

dependencies {

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    compile('org.springframework.cloud:spring-cloud-starter-zookeeper-discovery') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    //axon
    compile "org.axonframework:axon-spring-boot-starter:$axon"
    compile "org.axonframework:axon-distributed-commandbus-springcloud:$axon"
    compile "org.axonframework:axon-distributed-commandbus-jgroups:$axon"
    testCompile "org.axonframework:axon-test:$axon"

    runtime 'org.hsqldb:hsqldb:2.3.6'
//	compile('org.springframework.kafka:spring-kafka')

    //cloud
    //compile 'org.apache.curator:curator-recipes'
//    compile('org.apache.curator:curator-x-discovery'){
//        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
//    }
    //compile 'org.apache.zookeeper:zookeeper:3.4.13'

    testCompile 'org.springframework.boot:spring-boot-starter-test'

    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task ideaDockerPrepare(dependsOn: assemble) {
    doFirst {
        copy {
            from jar
            rename { fileName -> fileName.replace(jar.archiveName, 'axon-cloud-discovery.jar') }
            into 'build/libs'
        }
    }
}

task buildDocker(type: Docker, dependsOn: assemble) {
//    push = true
    applicationName = jar.baseName
    dockerfile = file('src/Dockerfile')
    doFirst {
        copy {
            from jar
            rename { fileName -> fileName.replace(jar.archiveName, 'axon-cloud-discovery.jar') }
            into stageDir
        }
    }
}